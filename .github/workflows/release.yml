name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        default: 'v1.0.0'

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  build-and-push-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: authservice
            context: ./Backend/authservice
            dockerfile: ./Backend/authservice/Dockerfile
          - name: restaurantservice
            context: ./Backend/restaurantservice
            dockerfile: ./Backend/restaurantservice/Dockerfile
          - name: orderservice
            context: ./Backend/orderservice
            dockerfile: ./Backend/orderservice/Dockerfile
          - name: apigateway
            context: ./Backend/apigateway
            dockerfile: ./Backend/apigateway/Dockerfile
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        fi

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/food-delivery-${{ matrix.service.name }}
        tags: |
          type=raw,value=${{ steps.get_tag.outputs.tag }}
          type=raw,value=latest
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  create-release-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push-release
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        fi

    - name: Create release manifest
      run: |
        cat > release-manifest.yaml << EOF
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: food-delivery-release-${{ steps.get_tag.outputs.tag }}
          labels:
            app: food-delivery-system
            version: ${{ steps.get_tag.outputs.tag }}
        data:
          authservice: "${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/food-delivery-authservice:${{ steps.get_tag.outputs.tag }}"
          restaurantservice: "${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/food-delivery-restaurantservice:${{ steps.get_tag.outputs.tag }}"
          orderservice: "${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/food-delivery-orderservice:${{ steps.get_tag.outputs.tag }}"
          apigateway: "${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/food-delivery-apigateway:${{ steps.get_tag.outputs.tag }}"
          frontend: "${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/food-delivery-frontend:${{ steps.get_tag.outputs.tag }}"
        EOF

    - name: Upload release manifest
      uses: actions/upload-artifact@v4
      with:
        name: release-manifest-${{ steps.get_tag.outputs.tag }}
        path: release-manifest.yaml
