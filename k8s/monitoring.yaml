# =========================
# Prometheus Deployment
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: food-delivery
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=15d
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-alerting
          mountPath: /etc/prometheus/alerting
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-alerting
        configMap:
          name: prometheus-alerting
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: food-delivery
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP

---
# =========================
# Grafana Deployment
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: food-delivery
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana-oss:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-provisioning
          mountPath: /etc/grafana/provisioning
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-provisioning
        configMap:
          name: grafana-provisioning

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: food-delivery
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: LoadBalancer

---
# =========================
# cAdvisor DaemonSet
# =========================
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cadvisor
  namespace: food-delivery
  labels:
    app: cadvisor
spec:
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      labels:
        app: cadvisor
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - name: cadvisor
        image: gcr.io/cadvisor/cadvisor:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          requests:
            memory: 200Mi
            cpu: 150m
          limits:
            memory: 300Mi
            cpu: 300m
        volumeMounts:
        - name: rootfs
          mountPath: /rootfs
          readOnly: true
        - name: var-run
          mountPath: /var/run
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: docker
          mountPath: /var/lib/docker
          readOnly: true
        - name: disk
          mountPath: /dev/disk
          readOnly: true
        securityContext:
          privileged: true
      volumes:
      - name: rootfs
        hostPath:
          path: /
      - name: var-run
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: docker
        hostPath:
          path: /var/lib/docker
      - name: disk
        hostPath:
          path: /dev/disk

---
apiVersion: v1
kind: Service
metadata:
  name: cadvisor
  namespace: food-delivery
  labels:
    app: cadvisor
spec:
  selector:
    app: cadvisor
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP

---
# =========================
# Node Exporter DaemonSet
# =========================
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: food-delivery
  labels:
    app: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - name: node-exporter
        image: prom/node-exporter:latest
        ports:
        - containerPort: 9100
          name: metrics
        resources:
          requests:
            memory: 30Mi
            cpu: 100m
          limits:
            memory: 50Mi
            cpu: 200m
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: rootfs
          mountPath: /rootfs
          readOnly: true
        args:
        - --path.procfs=/host/proc
        - --path.rootfs=/rootfs
        - --path.sysfs=/host/sys
        - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      - name: rootfs
        hostPath:
          path: /

---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: food-delivery
  labels:
    app: node-exporter
spec:
  selector:
    app: node-exporter
  ports:
  - port: 9100
    targetPort: 9100
  type: ClusterIP

---
# =========================
# Blackbox Exporter
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blackbox-exporter
  namespace: food-delivery
  labels:
    app: blackbox-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blackbox-exporter
  template:
    metadata:
      labels:
        app: blackbox-exporter
    spec:
      containers:
      - name: blackbox-exporter
        image: prom/blackbox-exporter:latest
        ports:
        - containerPort: 9115
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: blackbox-exporter
  namespace: food-delivery
  labels:
    app: blackbox-exporter
spec:
  selector:
    app: blackbox-exporter
  ports:
  - port: 9115
    targetPort: 9115
  type: ClusterIP

---
# =========================
# MySQL Auth Exporter
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-auth-exporter
  namespace: food-delivery
  labels:
    app: mysql-auth-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-auth-exporter
  template:
    metadata:
      labels:
        app: mysql-auth-exporter
    spec:
      containers:
      - name: mysql-exporter
        image: prom/mysqld-exporter:latest
        ports:
        - containerPort: 9104
        env:
        - name: DATA_SOURCE_NAME
          value: "exporter:exporterpass@tcp(mysql-auth:3306)/"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-auth-exporter
  namespace: food-delivery
  labels:
    app: mysql-auth-exporter
spec:
  selector:
    app: mysql-auth-exporter
  ports:
  - port: 9104
    targetPort: 9104
  type: ClusterIP

---
# =========================
# MySQL Food Exporter
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-food-exporter
  namespace: food-delivery
  labels:
    app: mysql-food-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-food-exporter
  template:
    metadata:
      labels:
        app: mysql-food-exporter
    spec:
      containers:
      - name: mysql-exporter
        image: prom/mysqld-exporter:latest
        ports:
        - containerPort: 9104
        env:
        - name: DATA_SOURCE_NAME
          value: "exporter:exporterpass@tcp(mysql-food:3306)/"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-food-exporter
  namespace: food-delivery
  labels:
    app: mysql-food-exporter
spec:
  selector:
    app: mysql-food-exporter
  ports:
  - port: 9104
    targetPort: 9104
  type: ClusterIP

---
# =========================
# MySQL Order Exporter
# =========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-order-exporter
  namespace: food-delivery
  labels:
    app: mysql-order-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-order-exporter
  template:
    metadata:
      labels:
        app: mysql-order-exporter
    spec:
      containers:
      - name: mysql-exporter
        image: prom/mysqld-exporter:latest
        ports:
        - containerPort: 9104
        env:
        - name: DATA_SOURCE_NAME
          value: "exporter:exporterpass@tcp(mysql-order:3306)/"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-order-exporter
  namespace: food-delivery
  labels:
    app: mysql-order-exporter
spec:
  selector:
    app: mysql-order-exporter
  ports:
  - port: 9104
    targetPort: 9104
  type: ClusterIP
