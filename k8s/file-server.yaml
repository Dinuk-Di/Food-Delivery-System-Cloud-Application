apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-server
  namespace: food-delivery
  labels:
    app: file-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: file-server
  template:
    metadata:
      labels:
        app: file-server
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: uploads-storage
          mountPath: /usr/share/nginx/html/uploads
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: food-uploads-pvc
      - name: nginx-config
        configMap:
          name: file-server-config

---
apiVersion: v1
kind: Service
metadata:
  name: file-server
  namespace: food-delivery
  labels:
    app: file-server
spec:
  selector:
    app: file-server
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: file-server-config
  namespace: food-delivery
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        server {
            listen 80;
            server_name localhost;
            
            # Enable CORS
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            
            location /uploads/ {
                root /usr/share/nginx/html;
                expires 1y;
                add_header Cache-Control "public, immutable";
                try_files $uri =404;
            }
            
            location / {
                return 404;
            }
        }
    }
